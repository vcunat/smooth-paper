#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass elsarticle
\begin_preamble
\usepackage{varioref} % more-clickable references to pages via \vpageref and \vpagerefrange

\usepackage{amsthm}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsfonts} % \mathbb for naturals, etc.
\usepackage{aliascnt} % counter aliasing - for numbering of theorem enviroments
\end_preamble
\use_default_options true
\master root.lyx
\begin_modules
theorems-ams
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 1
\output_sync_macro "\synctex=-1"
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 3.2cm
\columnsep 1.2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Section*
Plan
\end_layout

\begin_layout Itemize
? some very short overview somewhere in the beginning of the text.
\end_layout

\begin_layout Itemize
explain the task (Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:defs"

\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
predecessor problem
\end_layout

\begin_layout Itemize
ins/del model
\end_layout

\begin_layout Itemize
smooth distributions
\end_layout

\end_deeper
\begin_layout Itemize
previous work:
\end_layout

\begin_deeper
\begin_layout Itemize
review the claimed asympotic complexities; perhaps provide a table for the
 most important cases?
\end_layout

\begin_layout Itemize
? point out tools used to get them
\end_layout

\begin_layout Itemize
? point out unclear/disputable properties
\end_layout

\begin_layout Itemize
? compare to 
\begin_inset Quotes eld
\end_inset

distribution-less
\begin_inset Quotes erd
\end_inset

 complexities (Patrascu)
\end_layout

\end_deeper
\begin_layout Itemize
my approach:
\end_layout

\begin_deeper
\begin_layout Itemize
smoothness lemma: converting to 
\begin_inset Quotes eld
\end_inset

distribution-less
\begin_inset Quotes erd
\end_inset

 case with shorter words
\end_layout

\begin_layout Itemize
general two-level scheme using the lemma;
\end_layout

\begin_deeper
\begin_layout Plain Layout
Similarly to what van Emde Boas trees do, we suggest to split the bit-representa
tion into two parts, but asymmetrically.
 In both parts we propose to use standard structures that do not depend
 on distribution of the input.
 The speed in the more-significant bits will be due to the keys being short,
 and in less-significant bits the number of keys will be small in expected
 case.
\end_layout

\end_deeper
\begin_layout Itemize
analysis of some particular configuration(s), compared to previous works
\end_layout

\begin_layout Itemize
condemn the smoothness model, etc.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Definitions 
\begin_inset CommandInset label
LatexCommand label
name "sec:defs"

\end_inset


\end_layout

\begin_layout Standard
In this section we state the predecessor problem and the input model that
 we use to study it.
 In
\begin_inset space ~
\end_inset

Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:smooth-bucket"

\end_inset

 we formalize and prove a key property of smooth distributions that seems
 implicitly used in all related work (in weaker forms) as the most important
 step to achieve the stated performance.
 In
\begin_inset space ~
\end_inset

Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:main-results"

\end_inset

 we show how to utilize that property directly with well-known distribution-inde
pendent structures for the predecessor problem to get better performance
 in much simpler way, essentially by converting to the case of polynomial-sized
 universe.
\end_layout

\begin_layout Standard
The predecessor problem consists of maintaining a set of linearly ordered
 keys.
 The basic variant allows insertions, deletions, and 
\emph on
predecessor
\emph default
 queries which find the greatest contained key that is less than a given
 value.
 We assume the usual word-RAM
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "HagerupT98"

\end_inset

 as our computational model, and we restrict keys to word-sized integers.
 That can be shown not to be a significant limitation, as many other key
 types can be converted to the integer case cheaply, for example standard
 floating-point 
\begin_inset CommandInset citation
LatexCommand cite
after "sec. 2.1.3"
key "Goldberg91"

\end_inset

 and string keys 
\begin_inset CommandInset citation
LatexCommand cite
key "AndersT01"

\end_inset

.
\end_layout

\begin_layout Standard
We study the behavior of the predecessor problem on specific input key distribut
ions, which requires us to specify how we model the input:
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
input model
\end_layout

\end_inset

Insertions take keys distributed according to a density
\begin_inset space ~
\end_inset


\begin_inset Formula $\mu$
\end_inset

 that does not change during the whole life of the structure.
 Deletions remove uniformly from the set of 
\emph on
contained
\emph default
 elements.
 All the operations are arbitrarily intermixed and the keys are chosen independe
ntly of each other.
\end_layout

\begin_layout Standard
This model is convenient because it preserves distribution of the stored
 set
\begin_inset space ~
\end_inset

-- at any point of execution the set appears to be created by independent
 
\begin_inset Formula $\mu$
\end_inset

-insertions only.
 That is usually essential for complexity analyses in related structures.
 
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
Various random deletion models were thoroughly studied by Knuth
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Knuth77"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Most of related papers work with key distributions that can be described
 as 
\emph on

\begin_inset Formula $\left(s^{\alpha},s^{1-\delta}\right)$
\end_inset

-smooth
\emph default
 for some constants 
\begin_inset Formula $\alpha,\delta>0$
\end_inset

.
 Typically it is assumed that the particular density of the distribution
 is not known, but 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\delta$
\end_inset

 are fixed parameters.
\end_layout

\begin_layout Note*
If the distribution 
\emph on
was
\emph default
 known and its inverse cumulative distribution function 
\begin_inset Formula $F^{-1}$
\end_inset

 was cheaply computable (or approximable), we could convert the problem
 to the uniform case (or another bounded density).
 We could simply store keys transformed by 
\begin_inset Formula $F^{-1}$
\end_inset

 which would preserve the order.
 With any bounded input distribution, all operations can be easily handled
 in constant time by simply splitting the the key domain into 
\begin_inset Formula $\Theta(n)$
\end_inset

 intervals and mapping each to an element of an array.
 This solution for bounded distributions was pointed out already by Andersson
 and Mattsson 
\begin_inset CommandInset citation
LatexCommand cite
after "Sec. 5.2"
key "AndersM93"

\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
TODO (probably not): the second half of this paragraph might better be moved
 into the related-work section.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "def-smooth.tex"

\end_inset


\end_layout

\begin_layout Section
Static analysis of bucketing 
\begin_inset CommandInset label
LatexCommand label
name "sec:smooth-bucket"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "smooth-lemma.tex"

\end_inset


\end_layout

\begin_layout Section
Combining with known results and comparing to related work 
\begin_inset CommandInset label
LatexCommand label
name "sec:main-results"

\end_inset


\end_layout

\begin_layout Standard
We propose to split the bit representation of every key into two parts,
 exactly as one step of of decomposition from van Emde Boas trees, except
 that we split asymmetrically.
 In both parts we propose to use standard structures that do not utilize
 distribution properties of the input.
 The speed on the more significant bits will be due to the keys being short,
 and in the less significant bits the number of keys will be small in expected
 case due to smoothness.
\end_layout

\begin_layout Standard
To cover the cases most studied in previous work, we focus on using linear
 space and work with 
\begin_inset Formula $\left(s^{\alpha},s^{1-\delta}\right)$
\end_inset

-smooth distributions.
 To use the
\begin_inset space ~
\end_inset

Lemma
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:smooth-bucket"

\end_inset


\end_layout

\end_inset

, we need to split away at least 
\begin_inset Formula $(\alpha/\delta)\log n$
\end_inset

 bits.
 If the values of parameters are unknown, we can split away more bits to
 be asympotically certain, e.g.
 
\begin_inset Formula $\log^{2}n$
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
These bounds on the number of bits change during the life of the structure,
 but we can easily ensure that we cut at least that many by a full rebuild
 after every 
\begin_inset Formula $n_{0}/4$
\end_inset

 modifying operations where 
\begin_inset Formula $n_{0}$
\end_inset

 denotes the size of the stored set during the last rebuild.
 It would also be possible to deamortize that process by standard technique
 of 
\emph on
global rebuilding
\emph default
.
\end_layout

\begin_layout Plain Layout
Also note that 
\begin_inset Formula $\left(\alpha/\delta\right)\log n>\log^{2}n$
\end_inset

 only for 
\begin_inset Formula $n<2^{\alpha/\delta}$
\end_inset

 which is an unknown constant; thus the performance will be constant in
 that base case.
\end_layout

\end_inset

 On these more significant bits we can use standard hashed van Emde Boas
 trees 
\begin_inset CommandInset citation
LatexCommand cite
after "chap. 20, problems section"
key "intro2alg"

\end_inset

 to get 
\begin_inset Formula $\OO\left(\log\left(\log^{2}n\right)\right)=\OO\left(\log\log n\right)$
\end_inset

 expected amortized time per operation.
\begin_inset Foot
status open

\begin_layout Plain Layout
Note that the expectation is independent of the input when handling the
 more significant bits, as it only comes from randomization during hashing.
\end_layout

\end_inset

 Each substructure for the less significant bits is expected to store 
\begin_inset Formula $\OO(1)$
\end_inset

 keys, but if we wanted to cut down time on unfavorable input similarly
 to
\begin_inset space ~
\end_inset

Kaporis et
\begin_inset space ~
\end_inset

al.
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "KMSTTZ06"

\end_inset

, there are standard structures needing time 
\begin_inset Formula $\OO(\!\sqrt{\log n/\log\log n})$
\end_inset

 (considering the less precise bounds).
 The resulting performance is essentially the same as that of
\begin_inset space ~
\end_inset

Kaporis et
\begin_inset space ~
\end_inset

al.
\begin_inset space ~
\end_inset

but for lifting the restriction of 
\begin_inset Formula $\alpha\le1$
\end_inset

, and our approach is conceptually much simpler.
\end_layout

\begin_layout Theorem*
\begin_inset Argument 1
status open

\begin_layout Plain Layout
main result
\end_layout

\end_inset

There is a structure solving the predecessor problem in 
\begin_inset Formula $\OO\left(\log\log n\right)$
\end_inset

 expected time per operation and linear space on any 
\begin_inset Formula $\left(s^{\alpha},s^{1-\delta}\right)$
\end_inset

-smooth distribution for arbitrary 
\begin_inset Formula $\alpha,\delta>0$
\end_inset

.
 The distribution and parameters do not need to be known.
\end_layout

\begin_layout Standard
If we allow slightly more space of 
\begin_inset Formula $\OO\left(n^{1+1/o(\log n)}\right)\supset\OO\left(n^{1+\epsilon}\right)$
\end_inset

 words, we immeditely get 
\begin_inset Formula $\OO(1)$
\end_inset

 expected time due to the way van Emde Boas trees speed up in that case
 
\begin_inset CommandInset citation
LatexCommand cite
after "Sec. 1.3.2"
key "PatrasT06"

\end_inset

.
 This covers the cases studied in an unpublished work of Bellazougui et
\begin_inset space ~
\end_inset

al.
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "BKS11"

\end_inset

, also in a simpler way.
\end_layout

\begin_layout Standard
We feel that it is good to decouple most of the analysis from complex conditions
 on the input, as especially in practice we can rarely assume that all operation
s on the structure are independent and identically distributed.
 For the approach of our paper to work, it is enough (informally) that the
 information is only carried by a sufficiently short bit prefix of the keys.
\end_layout

\begin_layout Paragraph
Acknowledgements
\end_layout

\begin_layout Standard
Most of results in this paper were included in the author's master thesis
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Cunat10"

\end_inset

.
 Many thanks belong to his supervisor Václav Koubek for helpful discussions
 during our research into this problem.
 Tomáš Dvořák helped to improve presentation of this text.
\begin_inset Note Note
status open

\begin_layout Subsection
(stubs)
\end_layout

\begin_layout Paragraph
Mehlhorn & Tsakalidis 
\begin_inset CommandInset citation
LatexCommand cite
key "MehlT93"

\end_inset


\end_layout

\begin_layout Itemize
Smoothness: they use 
\begin_inset Formula $\delta=1/2$
\end_inset

, and 
\begin_inset Formula $\alpha<1$
\end_inset

 to get linear space.
\end_layout

\begin_layout Itemize
Complexity: 
\begin_inset Formula $\OO(\log\log n)$
\end_inset

 expected.
\end_layout

\begin_layout Paragraph
Andersson & Mattsson 
\begin_inset CommandInset citation
LatexCommand cite
key "AndersM93"

\end_inset


\end_layout

\begin_layout Plain Layout
Main result:
\end_layout

\begin_layout Itemize
Smoothness: 
\begin_inset Formula $\left(s/(\log\log s)^{1+\epsilon},s^{1-\delta}\right)$
\end_inset

 with any 
\begin_inset Formula $\epsilon,\delta>0$
\end_inset

.
\end_layout

\begin_layout Itemize
Complexity: 
\begin_inset Formula $\OO(\log\log n)$
\end_inset

 expected.
\end_layout

\begin_layout Plain Layout
They note the bounded-density case.
\end_layout

\begin_layout Paragraph
Kaporis &al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "KMSTTZ06"

\end_inset


\end_layout

\begin_layout Plain Layout
Main result: same as 
\begin_inset CommandInset citation
LatexCommand cite
key "AndersM93"

\end_inset

, but improved worst-case, it seems.
\end_layout

\begin_layout Paragraph
Bellazougui & al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "BKS11"

\end_inset


\end_layout

\begin_layout Plain Layout
They need space 
\begin_inset Formula $\OO\left(n^{1+\epsilon}\right)$
\end_inset

 for any 
\begin_inset Formula $\epsilon>0$
\end_inset

, and the structure is not fully dynamic, it seems.
\end_layout

\begin_layout Paragraph
Without assumptions on input
\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset citation
LatexCommand cite
key "PatrasT06"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
